import{c as h,a as c,p as u,i,F as y,s as v,u as g,S as w,t as o,b as x,d as C,e as p,f as S}from"./index-3a082d4a.js";const k=o('<section class="w-full h-full bg-primary text-primary p-3 overflow-y-scroll font-mono"><section class="w-full whitespace-pre-wrap"><p>Python (Pyodide 0.22.1) Shell</p><br></section><form action="javascript:void(0)" class="flex"><label class="h-primary text-bold float-left flex-none">&gt;&gt;&gt;&nbsp;</label><input type="text" class="bg-primary text-primary float-left border-b-2 border-white border-solid outline-none flex-1" value=""><input type="submit" class="invisible" value=""></form></section>'),N=o("<p>Loading Pyodide Shell...</p>"),P=o("<p></p>");function E(){let e,t;const[n,s]=h([]);return c(w,{get when(){return!u.loading},get fallback(){return N.cloneNode(!0)},get children(){const l=k.cloneNode(!0),r=l.firstChild;r.firstChild.nextSibling;const d=r.nextSibling,f=d.firstChild,m=f.nextSibling,_=t;typeof _=="function"?g(_,l):t=l,i(r,c(y,{get each(){return n()},children:(a,B)=>(()=>{const b=P.cloneNode(!0);return i(b,a),b})()}),null),d.addEventListener("submit",()=>{switch(e.value){case"exit()":break;case"clear()":s([]);break;default:s([...n(),">>> ".concat(e.value)]);try{u.latest.runPython(e.value);let a=u.latest.runPython("sys.stdout.getvalue()");a!=""&&s([...n(),a])}catch(a){s([...n(),a.message])}u.latest.runPython("sys.stdout = io.StringIO()")}e.value="",t.scrollTop=t.scrollHeight}),v(f,"for",e);const $=e;return typeof $=="function"?g($,m):e=m,l}})}const R=o('<section class="h-full md:h-1/2 w-full">Components list...</section>'),L=o('<section class="h-full md:h-1/2 w-full dark"></section>');function T(){return[R.cloneNode(!0),(()=>{const e=L.cloneNode(!0);return i(e,c(E,{})),e})()]}class D{constructor(t){this._name=t,[this._value,this._setValue]=h(""),[this._color,this._setColor]=h("#252525")}forSidebar(){return[]}forLcapy(){return this.name}get name(){return this._name}get value(){return this._value()}set value(t){this._setValue(t)}get color(){return this._color()}set color(t){this._setColor(t)}}const F=o('<svg height="100" width="50"><line x1="25" y1="0" x2="25" y2="20"></line></svg>');class O extends D{constructor(){super("R")}forDisplay(){const t=this;return(()=>{const n=F.cloneNode(!0);return x(s=>C(n,`stroke: ${t.color}; stroke-width: 2;`,s)),n})()}}const V=o('<section class="text-secondary bg-secondary absolute inset-x-0 bottom-0 w-full md:w-2/3 text-center"><button class="px-4 py-2 transition-all hover:bg-primary hover:text-primary mx-2">R</button></section>');function j(e){const[t,n]=p(e,["sheet"]);let s=t.sheet;return(()=>{const l=V.cloneNode(!0),r=l.firstChild;return r.$$click=()=>{s.addComponent(new O)},l})()}S(["click"]);const A=o('<section class="h-full w-full"></section>');function H(e){const[t,n]=p(e,["sheet"]);let s=t.sheet;return(()=>{const l=A.cloneNode(!0);return i(l,c(y,{get each(){return s.components},children:r=>r.forDisplay()})),l})()}const I=o('<section class="h-screen w-full md:w-2/3 inline-block align-top"></section>'),q=o('<aside class="h-screen w-full md:w-1/3 inline-block align-top"></aside>');function J(e){const[t,n]=p(e,["sheet"]);let s=t.sheet;return[(()=>{const l=I.cloneNode(!0);return i(l,c(H,{sheet:s}),null),i(l,c(j,{sheet:s}),null),l})(),(()=>{const l=q.cloneNode(!0);return i(l,c(T,{})),l})()]}export{J as default};
